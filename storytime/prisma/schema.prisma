// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_PRISMA_URL")
  directUrl = env("DATABASE_URL_NON_POOLING")
}

model User {
  id            String          @id @default(uuid()) @db.Uuid
  foreignId     String          @unique
  StoryMetadata StoryMetadata[]
  Story         Story[]
}

model CharacterSheet {
  id              String        @id @default(uuid()) @db.Uuid
  text            String        @db.Text
  StoryMetadata   StoryMetadata @relation(fields: [storyMetadataId], references: [id])
  storyMetadataId String        @unique @db.Uuid
}

model Summary {
  id              String        @id @default(uuid()) @db.Uuid
  summary         String        @db.Text
  StoryMetadata   StoryMetadata @relation(fields: [storyMetadataId], references: [id])
  storyMetadataId String        @unique @db.Uuid
}

model Story {
  id              String         @id @default(uuid()) @db.Uuid
  chapter         Int            @default(0)
  prompt          String         @db.Text
  text            String         @db.Text
  generated       Boolean        @default(false)
  StoryMetadata   StoryMetadata  @relation(fields: [storyMetadataId], references: [id])
  storyMetadataId String         @db.Uuid
  userId          String         @db.Uuid
  createdAt       DateTime       @default(now())
  ActionMemory    ActionMemory[]
  RecallMemory    RecallMemory[]
  User            User           @relation(fields: [userId], references: [id])
  Cost            Cost[]
  StoryPrompts    StoryPrompts[]

  @@unique([chapter, storyMetadataId])
}

model ActionMemory {
  id              String   @id @default(uuid()) @db.Uuid
  text            String   @db.Text
  importance      Int
  storyId         String?  @db.Uuid
  storyMetadataId String   @db.Uuid
  createdAt       DateTime @default(now())

  Story         Story?        @relation(fields: [storyId], references: [id])
  StoryMetadata StoryMetadata @relation(fields: [storyMetadataId], references: [id])
}

model RecallMemory {
  id              String   @id @default(uuid()) @db.Uuid
  text            String   @db.Text
  timeAgo         String
  storyId         String?  @db.Uuid
  storyMetadataId String   @db.Uuid
  createdAt       DateTime @default(now())

  Story         Story?        @relation(fields: [storyId], references: [id])
  StoryMetadata StoryMetadata @relation(fields: [storyMetadataId], references: [id])
}

model StoryMetadata {
  id             String          @id @default(uuid()) @db.Uuid
  title          String
  published      Boolean         @default(false)
  prompt         String          @default("") @db.Text
  User           User?           @relation(fields: [userId], references: [id])
  userId         String?         @db.Uuid
  createdAt      DateTime        @default(now())
  CharacterSheet CharacterSheet?
  Summary        Summary?
  Story          Story[]
  ActionMemory   ActionMemory[]
  RecallMemory   RecallMemory[]
  Cost           Cost[]
}

model StoryPrompts {
  id      String @id @default(uuid()) @db.Uuid
  prompt  String @db.Text
  storyId String @db.Uuid

  Story Story @relation(fields: [storyId], references: [id])
}

model Cost {
  id              String        @id @default(uuid()) @db.Uuid
  cost            Float
  action          String
  storyMetadataId String        @db.Uuid
  StoryMetadata   StoryMetadata @relation(fields: [storyMetadataId], references: [id])
  Story           Story?        @relation(fields: [storyId], references: [id])
  storyId         String?       @db.Uuid
  createdAt       DateTime      @default(now())

  @@index([action])
  @@index([storyMetadataId])
}
